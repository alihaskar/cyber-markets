apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -o cybermarkets.yaml
      kompose.version: 1.1.0 (36652f6)
    creationTimestamp: null
    labels:
      io.kompose.service: cn-exchange-connectors
    name: cn-exchange-connectors
  spec:
    clusterIP: None
    ports:
    - name: headless
      port: 55555
      targetPort: 0
    selector:
      io.kompose.service: cn-exchange-connectors
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -o cybermarkets.yaml
      kompose.service.type: loadbalancer
      kompose.version: 1.1.0 (36652f6)
    creationTimestamp: null
    labels:
      io.kompose.service: cn-exchange-stream-api
    name: cn-exchange-stream-api
  spec:
    ports:
    - name: "8082"
      port: 8082
      targetPort: 8082
    selector:
      io.kompose.service: cn-exchange-stream-api
    type: LoadBalancer
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -o cybermarkets.yaml
      kompose.version: 1.1.0 (36652f6)
    creationTimestamp: null
    labels:
      io.kompose.service: cn-kafka
    name: cn-kafka
  spec:
    ports:
    - name: "9092"
      port: 9092
      targetPort: 9092
    - name: "1099"
      port: 1099
      targetPort: 1099
    selector:
      io.kompose.service: cn-kafka
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -o cybermarkets.yaml
      kompose.version: 1.1.0 (36652f6)
    creationTimestamp: null
    labels:
      io.kompose.service: cn-zoo
    name: cn-zoo
  spec:
    ports:
    - name: "2181"
      port: 2181
      targetPort: 2181
    selector:
      io.kompose.service: cn-zoo
  status:
    loadBalancer: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -o cybermarkets.yaml
      kompose.version: 1.1.0 (36652f6)
    creationTimestamp: null
    labels:
      io.kompose.service: cn-exchange-connectors
    name: cn-exchange-connectors
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: cn-exchange-connectors
      spec:
        containers:
        - env:
          - name: KAFKA_CONNECTION
            value: cn-kafka:9092
          image: cybernode/cm-connectors:release-0.3.0
          name: cn-exchange-connectors
          resources: {}
        restartPolicy: Always
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -o cybermarkets.yaml
      kompose.service.type: loadbalancer
      kompose.version: 1.1.0 (36652f6)
    creationTimestamp: null
    labels:
      io.kompose.service: cn-exchange-stream-api
    name: cn-exchange-stream-api
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: cn-exchange-stream-api
      spec:
        containers:
        - env:
          - name: KAFKA_CONNECTION
            value: cn-kafka:9092
          image: cybernode/cm-stream-api:release-0.3.0
          name: cn-exchange-stream-api
          ports:
          - containerPort: 8082
          resources: {}
        restartPolicy: Always
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -o cybermarkets.yaml
      kompose.version: 1.1.0 (36652f6)
    creationTimestamp: null
    labels:
      io.kompose.service: cn-kafka
    name: cn-kafka
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: cn-kafka
      spec:
        containers:
        - env:
          - name: KAFKA_ADVERTISED_LISTENERS
            value: PLAINTEXT://cn-kafka:9092
          - name: KAFKA_BROKER_ID
            value: "1"
          - name: KAFKA_JMX_PORT
            value: "1099"
          - name: KAFKA_LOG4J_ROOT_LOGLEVEL
            value: ERROR
          - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
            value: "1"
          - name: KAFKA_ZOOKEEPER_CONNECT
            value: cn-zoo:2181
          image: confluentinc/cp-kafka:3.3.0
          name: cn-kafka
          ports:
          - containerPort: 9092
          - containerPort: 1099
          resources: {}
          volumeMounts:
          - mountPath: /var/lib/kafka
            name: cn-kafka-claim0
        restartPolicy: Always
        volumes:
        - name: cn-kafka-claim0
          persistentVolumeClaim:
            claimName: cn-kafka-claim0
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: cn-kafka-claim0
    name: cn-kafka-claim0
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -o cybermarkets.yaml
      kompose.version: 1.1.0 (36652f6)
    creationTimestamp: null
    labels:
      io.kompose.service: cn-zoo
    name: cn-zoo
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: cn-zoo
      spec:
        containers:
        - env:
          - name: KAFKA_LOG4J_ROOT_LOGLEVEL
            value: ERROR
          - name: ZOOKEEPER_CLIENT_PORT
            value: "2181"
          - name: ZOOKEEPER_TICK_TIME
            value: "2000"
          image: confluentinc/cp-zookeeper:3.3.0
          name: cn-zoo
          ports:
          - containerPort: 2181
          resources: {}
          volumeMounts:
          - mountPath: /var/lib/zookeeper/data
            name: cn-zoo-claim0
          - mountPath: /var/lib/zookeeper/log
            name: cn-zoo-claim1
        restartPolicy: Always
        volumes:
        - name: cn-zoo-claim0
          persistentVolumeClaim:
            claimName: cn-zoo-claim0
        - name: cn-zoo-claim1
          persistentVolumeClaim:
            claimName: cn-zoo-claim1
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: cn-zoo-claim0
    name: cn-zoo-claim0
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: cn-zoo-claim1
    name: cn-zoo-claim1
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
kind: List
metadata: {}

